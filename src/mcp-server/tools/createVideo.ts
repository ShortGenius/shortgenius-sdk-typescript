/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { createVideo } from "../../funcs/createVideo.js";
import * as operations from "../../models/operations/index.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: operations.CreateVideoRequestBody$inboundSchema,
};

export const tool$createVideo: ToolDefinition<typeof args> = {
  name: "create-video",
  description: `Create video

Before using this endpoint, call one of the following endpoints to generate and review your video's content:
- [Draft video](#tag/videos/POST/videos/drafts)
- [Draft video from URL](#tag/videos/POST/videos/drafts/url)
- [Draft video from script](#tag/videos/POST/videos/drafts/script)
- [Draft quiz video](#tag/videos/POST/videos/drafts/quiz)
- [Draft news video](#tag/videos/POST/videos/drafts/news)

Once you (or your LLM) are happy, you can pass the content to this endpoint to create and render the video.`,
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await createVideo(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
