/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Response object containing usage information for various credit types.
 */
export type Balance = {
  /**
   * General purpose credits.
   */
  credits: number;
  /**
   * Credits for generating animated videos.
   */
  animatedVideoCredits?: number | undefined;
  /**
   * Credits for generating high quality videos.
   */
  highQualityVideoCredits?: number | undefined;
  /**
   * Credits for generating images.
   */
  imageCredits?: number | undefined;
};

/**
 * Successful response
 */
export type GetUsageResponseBody = {
  /**
   * Response object containing usage information for various credit types.
   */
  balance: Balance;
};

/** @internal */
export const Balance$inboundSchema: z.ZodType<Balance, z.ZodTypeDef, unknown> =
  z.object({
    credits: z.number(),
    animated_video_credits: z.number().optional(),
    high_quality_video_credits: z.number().optional(),
    image_credits: z.number().optional(),
  }).transform((v) => {
    return remap$(v, {
      "animated_video_credits": "animatedVideoCredits",
      "high_quality_video_credits": "highQualityVideoCredits",
      "image_credits": "imageCredits",
    });
  });

/** @internal */
export type Balance$Outbound = {
  credits: number;
  animated_video_credits?: number | undefined;
  high_quality_video_credits?: number | undefined;
  image_credits?: number | undefined;
};

/** @internal */
export const Balance$outboundSchema: z.ZodType<
  Balance$Outbound,
  z.ZodTypeDef,
  Balance
> = z.object({
  credits: z.number(),
  animatedVideoCredits: z.number().optional(),
  highQualityVideoCredits: z.number().optional(),
  imageCredits: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    animatedVideoCredits: "animated_video_credits",
    highQualityVideoCredits: "high_quality_video_credits",
    imageCredits: "image_credits",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Balance$ {
  /** @deprecated use `Balance$inboundSchema` instead. */
  export const inboundSchema = Balance$inboundSchema;
  /** @deprecated use `Balance$outboundSchema` instead. */
  export const outboundSchema = Balance$outboundSchema;
  /** @deprecated use `Balance$Outbound` instead. */
  export type Outbound = Balance$Outbound;
}

export function balanceToJSON(balance: Balance): string {
  return JSON.stringify(Balance$outboundSchema.parse(balance));
}

export function balanceFromJSON(
  jsonString: string,
): SafeParseResult<Balance, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Balance$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Balance' from JSON`,
  );
}

/** @internal */
export const GetUsageResponseBody$inboundSchema: z.ZodType<
  GetUsageResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  balance: z.lazy(() => Balance$inboundSchema),
});

/** @internal */
export type GetUsageResponseBody$Outbound = {
  balance: Balance$Outbound;
};

/** @internal */
export const GetUsageResponseBody$outboundSchema: z.ZodType<
  GetUsageResponseBody$Outbound,
  z.ZodTypeDef,
  GetUsageResponseBody
> = z.object({
  balance: z.lazy(() => Balance$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetUsageResponseBody$ {
  /** @deprecated use `GetUsageResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetUsageResponseBody$inboundSchema;
  /** @deprecated use `GetUsageResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetUsageResponseBody$outboundSchema;
  /** @deprecated use `GetUsageResponseBody$Outbound` instead. */
  export type Outbound = GetUsageResponseBody$Outbound;
}

export function getUsageResponseBodyToJSON(
  getUsageResponseBody: GetUsageResponseBody,
): string {
  return JSON.stringify(
    GetUsageResponseBody$outboundSchema.parse(getUsageResponseBody),
  );
}

export function getUsageResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetUsageResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetUsageResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetUsageResponseBody' from JSON`,
  );
}
