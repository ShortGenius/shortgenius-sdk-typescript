/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetMusicGenresIdRequest = {
  /**
   * The unique ID of the music genre.
   */
  id: string;
};

/** @internal */
export const GetMusicGenresIdRequest$inboundSchema: z.ZodType<
  GetMusicGenresIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetMusicGenresIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetMusicGenresIdRequest$outboundSchema: z.ZodType<
  GetMusicGenresIdRequest$Outbound,
  z.ZodTypeDef,
  GetMusicGenresIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetMusicGenresIdRequest$ {
  /** @deprecated use `GetMusicGenresIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetMusicGenresIdRequest$inboundSchema;
  /** @deprecated use `GetMusicGenresIdRequest$outboundSchema` instead. */
  export const outboundSchema = GetMusicGenresIdRequest$outboundSchema;
  /** @deprecated use `GetMusicGenresIdRequest$Outbound` instead. */
  export type Outbound = GetMusicGenresIdRequest$Outbound;
}

export function getMusicGenresIdRequestToJSON(
  getMusicGenresIdRequest: GetMusicGenresIdRequest,
): string {
  return JSON.stringify(
    GetMusicGenresIdRequest$outboundSchema.parse(getMusicGenresIdRequest),
  );
}

export function getMusicGenresIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetMusicGenresIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetMusicGenresIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetMusicGenresIdRequest' from JSON`,
  );
}
