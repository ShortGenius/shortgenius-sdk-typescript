/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Locale for topic generation.
 */
export const GenerateVideoTopicsLocale = {
  AfZA: "af-ZA",
  IDID: "id-ID",
  MsMY: "ms-MY",
  CaES: "ca-ES",
  CsCZ: "cs-CZ",
  DaDK: "da-DK",
  DEDE: "de-DE",
  EnUS: "en-US",
  ESES: "es-ES",
  Es419: "es-419",
  FrCA: "fr-CA",
  FRFR: "fr-FR",
  HRHR: "hr-HR",
  ITIT: "it-IT",
  HUHU: "hu-HU",
  NLNL: "nl-NL",
  NONO: "no-NO",
  PLPL: "pl-PL",
  PtBR: "pt-BR",
  PTPT: "pt-PT",
  RORO: "ro-RO",
  SKSK: "sk-SK",
  FIFI: "fi-FI",
  SvSE: "sv-SE",
  ViVN: "vi-VN",
  TRTR: "tr-TR",
  ElGR: "el-GR",
  RURU: "ru-RU",
  SrSP: "sr-SP",
  UkUA: "uk-UA",
  HyAM: "hy-AM",
  HeIL: "he-IL",
  UrPK: "ur-PK",
  ArSA: "ar-SA",
  HiIN: "hi-IN",
  THTH: "th-TH",
  KoKR: "ko-KR",
  JaJP: "ja-JP",
  ZhCN: "zh-CN",
  ZhTW: "zh-TW",
  Auto: "auto",
} as const;
/**
 * Locale for topic generation.
 */
export type GenerateVideoTopicsLocale = ClosedEnum<
  typeof GenerateVideoTopicsLocale
>;

/**
 * Content type of the video.
 */
export const GenerateVideoTopicsContentType = {
  Custom: "Custom",
  News: "News",
  Quiz: "Quiz",
  History: "History",
  Scary: "Scary",
  Motivational: "Motivational",
  Bedtime: "Bedtime",
  FunFacts: "FunFacts",
  LifeTips: "LifeTips",
  Eli5: "ELI5",
  Philosophy: "Philosophy",
} as const;
/**
 * Content type of the video.
 */
export type GenerateVideoTopicsContentType = ClosedEnum<
  typeof GenerateVideoTopicsContentType
>;

/**
 * Parameters for generating video topic suggestions.
 */
export type GenerateVideoTopicsRequestBody = {
  /**
   * Base idea or theme for generating custom topics.
   */
  parentTopic?: string | undefined;
  /**
   * Locale for topic generation.
   */
  locale?: GenerateVideoTopicsLocale | undefined;
  /**
   * Approximate number of topics to generate (max 100).
   */
  numberOfTopics?: number | undefined;
  /**
   * Content type of the video.
   */
  contentType?: GenerateVideoTopicsContentType | undefined;
};

/** @internal */
export const GenerateVideoTopicsLocale$inboundSchema: z.ZodNativeEnum<
  typeof GenerateVideoTopicsLocale
> = z.nativeEnum(GenerateVideoTopicsLocale);

/** @internal */
export const GenerateVideoTopicsLocale$outboundSchema: z.ZodNativeEnum<
  typeof GenerateVideoTopicsLocale
> = GenerateVideoTopicsLocale$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GenerateVideoTopicsLocale$ {
  /** @deprecated use `GenerateVideoTopicsLocale$inboundSchema` instead. */
  export const inboundSchema = GenerateVideoTopicsLocale$inboundSchema;
  /** @deprecated use `GenerateVideoTopicsLocale$outboundSchema` instead. */
  export const outboundSchema = GenerateVideoTopicsLocale$outboundSchema;
}

/** @internal */
export const GenerateVideoTopicsContentType$inboundSchema: z.ZodNativeEnum<
  typeof GenerateVideoTopicsContentType
> = z.nativeEnum(GenerateVideoTopicsContentType);

/** @internal */
export const GenerateVideoTopicsContentType$outboundSchema: z.ZodNativeEnum<
  typeof GenerateVideoTopicsContentType
> = GenerateVideoTopicsContentType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GenerateVideoTopicsContentType$ {
  /** @deprecated use `GenerateVideoTopicsContentType$inboundSchema` instead. */
  export const inboundSchema = GenerateVideoTopicsContentType$inboundSchema;
  /** @deprecated use `GenerateVideoTopicsContentType$outboundSchema` instead. */
  export const outboundSchema = GenerateVideoTopicsContentType$outboundSchema;
}

/** @internal */
export const GenerateVideoTopicsRequestBody$inboundSchema: z.ZodType<
  GenerateVideoTopicsRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  parent_topic: z.string().optional(),
  locale: GenerateVideoTopicsLocale$inboundSchema.default("auto"),
  number_of_topics: z.number().default(50),
  content_type: GenerateVideoTopicsContentType$inboundSchema.default("Custom"),
}).transform((v) => {
  return remap$(v, {
    "parent_topic": "parentTopic",
    "number_of_topics": "numberOfTopics",
    "content_type": "contentType",
  });
});

/** @internal */
export type GenerateVideoTopicsRequestBody$Outbound = {
  parent_topic?: string | undefined;
  locale: string;
  number_of_topics: number;
  content_type: string;
};

/** @internal */
export const GenerateVideoTopicsRequestBody$outboundSchema: z.ZodType<
  GenerateVideoTopicsRequestBody$Outbound,
  z.ZodTypeDef,
  GenerateVideoTopicsRequestBody
> = z.object({
  parentTopic: z.string().optional(),
  locale: GenerateVideoTopicsLocale$outboundSchema.default("auto"),
  numberOfTopics: z.number().default(50),
  contentType: GenerateVideoTopicsContentType$outboundSchema.default("Custom"),
}).transform((v) => {
  return remap$(v, {
    parentTopic: "parent_topic",
    numberOfTopics: "number_of_topics",
    contentType: "content_type",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GenerateVideoTopicsRequestBody$ {
  /** @deprecated use `GenerateVideoTopicsRequestBody$inboundSchema` instead. */
  export const inboundSchema = GenerateVideoTopicsRequestBody$inboundSchema;
  /** @deprecated use `GenerateVideoTopicsRequestBody$outboundSchema` instead. */
  export const outboundSchema = GenerateVideoTopicsRequestBody$outboundSchema;
  /** @deprecated use `GenerateVideoTopicsRequestBody$Outbound` instead. */
  export type Outbound = GenerateVideoTopicsRequestBody$Outbound;
}

export function generateVideoTopicsRequestBodyToJSON(
  generateVideoTopicsRequestBody: GenerateVideoTopicsRequestBody,
): string {
  return JSON.stringify(
    GenerateVideoTopicsRequestBody$outboundSchema.parse(
      generateVideoTopicsRequestBody,
    ),
  );
}

export function generateVideoTopicsRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<GenerateVideoTopicsRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GenerateVideoTopicsRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GenerateVideoTopicsRequestBody' from JSON`,
  );
}
