/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetAudioVoicesIdRequest = {
  /**
   * The unique ID of the voice to retrieve.
   */
  id: string;
};

/** @internal */
export const GetAudioVoicesIdRequest$inboundSchema: z.ZodType<
  GetAudioVoicesIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetAudioVoicesIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetAudioVoicesIdRequest$outboundSchema: z.ZodType<
  GetAudioVoicesIdRequest$Outbound,
  z.ZodTypeDef,
  GetAudioVoicesIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAudioVoicesIdRequest$ {
  /** @deprecated use `GetAudioVoicesIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetAudioVoicesIdRequest$inboundSchema;
  /** @deprecated use `GetAudioVoicesIdRequest$outboundSchema` instead. */
  export const outboundSchema = GetAudioVoicesIdRequest$outboundSchema;
  /** @deprecated use `GetAudioVoicesIdRequest$Outbound` instead. */
  export type Outbound = GetAudioVoicesIdRequest$Outbound;
}

export function getAudioVoicesIdRequestToJSON(
  getAudioVoicesIdRequest: GetAudioVoicesIdRequest,
): string {
  return JSON.stringify(
    GetAudioVoicesIdRequest$outboundSchema.parse(getAudioVoicesIdRequest),
  );
}

export function getAudioVoicesIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetAudioVoicesIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetAudioVoicesIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetAudioVoicesIdRequest' from JSON`,
  );
}
