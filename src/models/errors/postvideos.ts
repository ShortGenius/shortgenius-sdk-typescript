/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * An error response object.
 */
export type PostVideosVideosResponseBodyData = {
  /**
   * Error message describing the reason for failure.
   */
  message?: string | null | undefined;
};

/**
 * An error response object.
 */
export class PostVideosVideosResponseBody extends Error {
  /** The original data that was passed to this error instance. */
  data$: PostVideosVideosResponseBodyData;

  constructor(err: PostVideosVideosResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.name = "PostVideosVideosResponseBody";
  }
}

/**
 * An error response object.
 */
export type PostVideosResponseBodyData = {
  /**
   * Error message describing the reason for failure.
   */
  message?: string | null | undefined;
};

/**
 * An error response object.
 */
export class PostVideosResponseBody extends Error {
  /** The original data that was passed to this error instance. */
  data$: PostVideosResponseBodyData;

  constructor(err: PostVideosResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.name = "PostVideosResponseBody";
  }
}

/** @internal */
export const PostVideosVideosResponseBody$inboundSchema: z.ZodType<
  PostVideosVideosResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.nullable(z.string()).optional(),
})
  .transform((v) => {
    return new PostVideosVideosResponseBody(v);
  });

/** @internal */
export type PostVideosVideosResponseBody$Outbound = {
  message?: string | null | undefined;
};

/** @internal */
export const PostVideosVideosResponseBody$outboundSchema: z.ZodType<
  PostVideosVideosResponseBody$Outbound,
  z.ZodTypeDef,
  PostVideosVideosResponseBody
> = z.instanceof(PostVideosVideosResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    message: z.nullable(z.string()).optional(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostVideosVideosResponseBody$ {
  /** @deprecated use `PostVideosVideosResponseBody$inboundSchema` instead. */
  export const inboundSchema = PostVideosVideosResponseBody$inboundSchema;
  /** @deprecated use `PostVideosVideosResponseBody$outboundSchema` instead. */
  export const outboundSchema = PostVideosVideosResponseBody$outboundSchema;
  /** @deprecated use `PostVideosVideosResponseBody$Outbound` instead. */
  export type Outbound = PostVideosVideosResponseBody$Outbound;
}

/** @internal */
export const PostVideosResponseBody$inboundSchema: z.ZodType<
  PostVideosResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.nullable(z.string()).optional(),
})
  .transform((v) => {
    return new PostVideosResponseBody(v);
  });

/** @internal */
export type PostVideosResponseBody$Outbound = {
  message?: string | null | undefined;
};

/** @internal */
export const PostVideosResponseBody$outboundSchema: z.ZodType<
  PostVideosResponseBody$Outbound,
  z.ZodTypeDef,
  PostVideosResponseBody
> = z.instanceof(PostVideosResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    message: z.nullable(z.string()).optional(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostVideosResponseBody$ {
  /** @deprecated use `PostVideosResponseBody$inboundSchema` instead. */
  export const inboundSchema = PostVideosResponseBody$inboundSchema;
  /** @deprecated use `PostVideosResponseBody$outboundSchema` instead. */
  export const outboundSchema = PostVideosResponseBody$outboundSchema;
  /** @deprecated use `PostVideosResponseBody$Outbound` instead. */
  export type Outbound = PostVideosResponseBody$Outbound;
}
