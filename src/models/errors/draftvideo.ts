/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * An error response object.
 */
export type DraftVideoResponseResponseBodyData = {
  /**
   * Error message describing the reason for failure.
   */
  message?: string | null | undefined;
};

/**
 * An error response object.
 */
export class DraftVideoResponseResponseBody extends Error {
  /** The original data that was passed to this error instance. */
  data$: DraftVideoResponseResponseBodyData;

  constructor(err: DraftVideoResponseResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.name = "DraftVideoResponseResponseBody";
  }
}

/**
 * An error response object.
 */
export type DraftVideoResponseBodyData = {
  /**
   * Error message describing the reason for failure.
   */
  message?: string | null | undefined;
};

/**
 * An error response object.
 */
export class DraftVideoResponseBody extends Error {
  /** The original data that was passed to this error instance. */
  data$: DraftVideoResponseBodyData;

  constructor(err: DraftVideoResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.name = "DraftVideoResponseBody";
  }
}

/** @internal */
export const DraftVideoResponseResponseBody$inboundSchema: z.ZodType<
  DraftVideoResponseResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.nullable(z.string()).optional(),
})
  .transform((v) => {
    return new DraftVideoResponseResponseBody(v);
  });

/** @internal */
export type DraftVideoResponseResponseBody$Outbound = {
  message?: string | null | undefined;
};

/** @internal */
export const DraftVideoResponseResponseBody$outboundSchema: z.ZodType<
  DraftVideoResponseResponseBody$Outbound,
  z.ZodTypeDef,
  DraftVideoResponseResponseBody
> = z.instanceof(DraftVideoResponseResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    message: z.nullable(z.string()).optional(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DraftVideoResponseResponseBody$ {
  /** @deprecated use `DraftVideoResponseResponseBody$inboundSchema` instead. */
  export const inboundSchema = DraftVideoResponseResponseBody$inboundSchema;
  /** @deprecated use `DraftVideoResponseResponseBody$outboundSchema` instead. */
  export const outboundSchema = DraftVideoResponseResponseBody$outboundSchema;
  /** @deprecated use `DraftVideoResponseResponseBody$Outbound` instead. */
  export type Outbound = DraftVideoResponseResponseBody$Outbound;
}

/** @internal */
export const DraftVideoResponseBody$inboundSchema: z.ZodType<
  DraftVideoResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.nullable(z.string()).optional(),
})
  .transform((v) => {
    return new DraftVideoResponseBody(v);
  });

/** @internal */
export type DraftVideoResponseBody$Outbound = {
  message?: string | null | undefined;
};

/** @internal */
export const DraftVideoResponseBody$outboundSchema: z.ZodType<
  DraftVideoResponseBody$Outbound,
  z.ZodTypeDef,
  DraftVideoResponseBody
> = z.instanceof(DraftVideoResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    message: z.nullable(z.string()).optional(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DraftVideoResponseBody$ {
  /** @deprecated use `DraftVideoResponseBody$inboundSchema` instead. */
  export const inboundSchema = DraftVideoResponseBody$inboundSchema;
  /** @deprecated use `DraftVideoResponseBody$outboundSchema` instead. */
  export const outboundSchema = DraftVideoResponseBody$outboundSchema;
  /** @deprecated use `DraftVideoResponseBody$Outbound` instead. */
  export type Outbound = DraftVideoResponseBody$Outbound;
}
