/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * An error response object.
 */
export type PostVideosDraftsNewsVideosResponseBodyData = {
  /**
   * Error message describing the reason for failure.
   */
  message?: string | null | undefined;
};

/**
 * An error response object.
 */
export class PostVideosDraftsNewsVideosResponseBody extends Error {
  /** The original data that was passed to this error instance. */
  data$: PostVideosDraftsNewsVideosResponseBodyData;

  constructor(err: PostVideosDraftsNewsVideosResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.name = "PostVideosDraftsNewsVideosResponseBody";
  }
}

/**
 * An error response object.
 */
export type PostVideosDraftsNewsResponseBodyData = {
  /**
   * Error message describing the reason for failure.
   */
  message?: string | null | undefined;
};

/**
 * An error response object.
 */
export class PostVideosDraftsNewsResponseBody extends Error {
  /** The original data that was passed to this error instance. */
  data$: PostVideosDraftsNewsResponseBodyData;

  constructor(err: PostVideosDraftsNewsResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.name = "PostVideosDraftsNewsResponseBody";
  }
}

/** @internal */
export const PostVideosDraftsNewsVideosResponseBody$inboundSchema: z.ZodType<
  PostVideosDraftsNewsVideosResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.nullable(z.string()).optional(),
})
  .transform((v) => {
    return new PostVideosDraftsNewsVideosResponseBody(v);
  });

/** @internal */
export type PostVideosDraftsNewsVideosResponseBody$Outbound = {
  message?: string | null | undefined;
};

/** @internal */
export const PostVideosDraftsNewsVideosResponseBody$outboundSchema: z.ZodType<
  PostVideosDraftsNewsVideosResponseBody$Outbound,
  z.ZodTypeDef,
  PostVideosDraftsNewsVideosResponseBody
> = z.instanceof(PostVideosDraftsNewsVideosResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    message: z.nullable(z.string()).optional(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostVideosDraftsNewsVideosResponseBody$ {
  /** @deprecated use `PostVideosDraftsNewsVideosResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PostVideosDraftsNewsVideosResponseBody$inboundSchema;
  /** @deprecated use `PostVideosDraftsNewsVideosResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PostVideosDraftsNewsVideosResponseBody$outboundSchema;
  /** @deprecated use `PostVideosDraftsNewsVideosResponseBody$Outbound` instead. */
  export type Outbound = PostVideosDraftsNewsVideosResponseBody$Outbound;
}

/** @internal */
export const PostVideosDraftsNewsResponseBody$inboundSchema: z.ZodType<
  PostVideosDraftsNewsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.nullable(z.string()).optional(),
})
  .transform((v) => {
    return new PostVideosDraftsNewsResponseBody(v);
  });

/** @internal */
export type PostVideosDraftsNewsResponseBody$Outbound = {
  message?: string | null | undefined;
};

/** @internal */
export const PostVideosDraftsNewsResponseBody$outboundSchema: z.ZodType<
  PostVideosDraftsNewsResponseBody$Outbound,
  z.ZodTypeDef,
  PostVideosDraftsNewsResponseBody
> = z.instanceof(PostVideosDraftsNewsResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    message: z.nullable(z.string()).optional(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostVideosDraftsNewsResponseBody$ {
  /** @deprecated use `PostVideosDraftsNewsResponseBody$inboundSchema` instead. */
  export const inboundSchema = PostVideosDraftsNewsResponseBody$inboundSchema;
  /** @deprecated use `PostVideosDraftsNewsResponseBody$outboundSchema` instead. */
  export const outboundSchema = PostVideosDraftsNewsResponseBody$outboundSchema;
  /** @deprecated use `PostVideosDraftsNewsResponseBody$Outbound` instead. */
  export type Outbound = PostVideosDraftsNewsResponseBody$Outbound;
}
