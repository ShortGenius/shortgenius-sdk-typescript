/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * An error response object.
 */
export type PostAudioSpeechAudioResponseBodyData = {
  /**
   * Error message describing the reason for failure.
   */
  message?: string | null | undefined;
};

/**
 * An error response object.
 */
export class PostAudioSpeechAudioResponseBody extends Error {
  /** The original data that was passed to this error instance. */
  data$: PostAudioSpeechAudioResponseBodyData;

  constructor(err: PostAudioSpeechAudioResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.name = "PostAudioSpeechAudioResponseBody";
  }
}

/**
 * An error response object.
 */
export type PostAudioSpeechResponseBodyData = {
  /**
   * Error message describing the reason for failure.
   */
  message?: string | null | undefined;
};

/**
 * An error response object.
 */
export class PostAudioSpeechResponseBody extends Error {
  /** The original data that was passed to this error instance. */
  data$: PostAudioSpeechResponseBodyData;

  constructor(err: PostAudioSpeechResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.name = "PostAudioSpeechResponseBody";
  }
}

/** @internal */
export const PostAudioSpeechAudioResponseBody$inboundSchema: z.ZodType<
  PostAudioSpeechAudioResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.nullable(z.string()).optional(),
})
  .transform((v) => {
    return new PostAudioSpeechAudioResponseBody(v);
  });

/** @internal */
export type PostAudioSpeechAudioResponseBody$Outbound = {
  message?: string | null | undefined;
};

/** @internal */
export const PostAudioSpeechAudioResponseBody$outboundSchema: z.ZodType<
  PostAudioSpeechAudioResponseBody$Outbound,
  z.ZodTypeDef,
  PostAudioSpeechAudioResponseBody
> = z.instanceof(PostAudioSpeechAudioResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    message: z.nullable(z.string()).optional(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostAudioSpeechAudioResponseBody$ {
  /** @deprecated use `PostAudioSpeechAudioResponseBody$inboundSchema` instead. */
  export const inboundSchema = PostAudioSpeechAudioResponseBody$inboundSchema;
  /** @deprecated use `PostAudioSpeechAudioResponseBody$outboundSchema` instead. */
  export const outboundSchema = PostAudioSpeechAudioResponseBody$outboundSchema;
  /** @deprecated use `PostAudioSpeechAudioResponseBody$Outbound` instead. */
  export type Outbound = PostAudioSpeechAudioResponseBody$Outbound;
}

/** @internal */
export const PostAudioSpeechResponseBody$inboundSchema: z.ZodType<
  PostAudioSpeechResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.nullable(z.string()).optional(),
})
  .transform((v) => {
    return new PostAudioSpeechResponseBody(v);
  });

/** @internal */
export type PostAudioSpeechResponseBody$Outbound = {
  message?: string | null | undefined;
};

/** @internal */
export const PostAudioSpeechResponseBody$outboundSchema: z.ZodType<
  PostAudioSpeechResponseBody$Outbound,
  z.ZodTypeDef,
  PostAudioSpeechResponseBody
> = z.instanceof(PostAudioSpeechResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    message: z.nullable(z.string()).optional(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostAudioSpeechResponseBody$ {
  /** @deprecated use `PostAudioSpeechResponseBody$inboundSchema` instead. */
  export const inboundSchema = PostAudioSpeechResponseBody$inboundSchema;
  /** @deprecated use `PostAudioSpeechResponseBody$outboundSchema` instead. */
  export const outboundSchema = PostAudioSpeechResponseBody$outboundSchema;
  /** @deprecated use `PostAudioSpeechResponseBody$Outbound` instead. */
  export type Outbound = PostAudioSpeechResponseBody$Outbound;
}
