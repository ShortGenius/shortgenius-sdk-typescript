/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * An error response object.
 */
export type GetAudioVoicesIdResponseBodyData = {
  /**
   * Error message describing the reason for failure.
   */
  message?: string | null | undefined;
};

/**
 * An error response object.
 */
export class GetAudioVoicesIdResponseBody extends Error {
  /** The original data that was passed to this error instance. */
  data$: GetAudioVoicesIdResponseBodyData;

  constructor(err: GetAudioVoicesIdResponseBodyData) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message);
    this.data$ = err;

    this.name = "GetAudioVoicesIdResponseBody";
  }
}

/** @internal */
export const GetAudioVoicesIdResponseBody$inboundSchema: z.ZodType<
  GetAudioVoicesIdResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  message: z.nullable(z.string()).optional(),
})
  .transform((v) => {
    return new GetAudioVoicesIdResponseBody(v);
  });

/** @internal */
export type GetAudioVoicesIdResponseBody$Outbound = {
  message?: string | null | undefined;
};

/** @internal */
export const GetAudioVoicesIdResponseBody$outboundSchema: z.ZodType<
  GetAudioVoicesIdResponseBody$Outbound,
  z.ZodTypeDef,
  GetAudioVoicesIdResponseBody
> = z.instanceof(GetAudioVoicesIdResponseBody)
  .transform(v => v.data$)
  .pipe(z.object({
    message: z.nullable(z.string()).optional(),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetAudioVoicesIdResponseBody$ {
  /** @deprecated use `GetAudioVoicesIdResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetAudioVoicesIdResponseBody$inboundSchema;
  /** @deprecated use `GetAudioVoicesIdResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetAudioVoicesIdResponseBody$outboundSchema;
  /** @deprecated use `GetAudioVoicesIdResponseBody$Outbound` instead. */
  export type Outbound = GetAudioVoicesIdResponseBody$Outbound;
}
